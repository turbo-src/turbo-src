#!/bin/bash

usage() {
  echo "Usage: $0 [init|start|stop|restart|start-viatui|stop-viatui|load-turbosrc-viatui|login-viatui|load-buttons-viatui|test [USERNAME REPO ACTION]]"
  echo "  init: initialize necessary files and directories"
  echo "  test: $0 <username> <repository> [delete_fork|fork_repo|create_pull_request|run_tests|execute_all|execute_all_except_tests]"
  exit 1
}

stop_services() {
  echo "Stopping all services..."
  sleep 1
  docker-compose -f ./docker-compose.yml down
  # Deactivating environment
  deactivate
}

start_services() {
  echo "Starting services..."
  # Activating environment
  source venv/bin/activate
  docker-compose -f ./docker-compose.yml up --build -d \
    turbosrc-egress-router \
    turbosrc-ingress-router \
    turbosrc-service \
    turbosrc-engine \
    namespace-service \
    git-service \
    gh-service \
    gitea \
    algorand
}

load_turbosrc_viatui() {
    docker-compose exec -it viatui /root/.local/bin/poetry run python scripts/load_turbosrc.py
    sleep 2
    docker-compose exec -it viatui /root/.local/bin/poetry run python scripts/container_screenshot.py load-turbosrc.png
}

login_viatui() {
    docker-compose exec -it viatui /root/.local/bin/poetry run python scripts/login.py
    sleep 2
    docker-compose exec -it viatui /root/.local/bin/poetry run python scripts/container_screenshot.py login.png
}

load_buttons_viatui() {
    docker-compose exec -it viatui /root/.local/bin/poetry run python scripts/load_vote_buttons.py
    sleep 2
    docker-compose exec -it viatui /root/.local/bin/poetry run python scripts/container_screenshot.py load_vote_buttons.png
}

start_viatui() {
    # Runs a container off image in docker-compose.
    # For whatever reason, docker-compose `up` and `start` isn't doing what is expected.
    docker-compose run viatui
}

stop_viatui() {
  # Can't just do `docker-compse stop viatui`, as `start_viatui` launches a one-off container.
  docker ps | grep 'viatui' | awk '{print $1}' | xargs -r docker stop
}

run_tests() {
  if [[ $# -lt 3 ]]; then
    echo "Usage: $0 test <username> <repository> [delete_fork|fork_repo|create_pull_request|run_tests|execute_all|execute_all_except_tests] [--visual]"
    exit 1
  fi

  USERNAME=$1
  REPO=$2
  ACTION=$3
  VISUAL_FLAG=${4:-}  # Set VISUAL_FLAG to fourth argument, if provided

  # Activating environment
  source venv/bin/activate
  ./tsrc-test $USERNAME $REPO $ACTION $VISUAL_FLAG
}

initialize_files() {
  echo "Creating .env for docker file permissions (may not work on non-unix like systems)."
  ./create-env.sh

  docker-compose -f ./docker-compose.yml build \
    turbosrc-egress-router \
    turbosrc-ingress-router \
    turbosrc-service \
    turbosrc-engine \
    namespace-service \
    gh-service \
  # Pass all arguments to the Python script
  ARGS="$@"

  # Checking if environment exists
  if [ -d "venv" ]; then
      echo "Environment venv already exists."
  else
      echo "Creating environment venv..."
      python3 -m venv venv
  fi

  # Activating environment and installing dependencies
  echo "Activating environment and installing dependencies..."
  source venv/bin/activate
  pip install -r requirements.txt

  # Running python3 tsrc-dev.py init with additional arguments
  echo "Running tsrc-dev.py init $ARGS..."
  python3 tsrc-dev.py init $ARGS
}

if [[ $# -lt 1 ]]; then
  usage
fi

if [[ "$1" == "init" ]]; then
  shift
  initialize_files "$@"
elif [[ "$1" == "stop" ]]; then
  stop_services
elif [[ "$1" == "start" ]]; then
  start_services
elif [[ "$1" == "restart" ]]; then
  stop_services
  start_services
elif [[ "$1" == "load-turbosrc-viatui" ]]; then
  load_turbosrc_viatui
elif [[ "$1" == "load-buttons-viatui" ]]; then
  load_buttons_viatui
elif [[ "$1" == "start-viatui" ]]; then
  start_viatui
elif [[ "$1" == "stop-viatui" ]]; then
  stop_viatui
elif [[ "$1" == "login-viatui" ]]; then
  login_viatui
elif [[ "$1" == "test" ]]; then
  shift
  run_tests "$@"
else
  usage
fi

